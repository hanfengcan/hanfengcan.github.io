(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{162:function(t,e,r){t.exports=r.p+"assets/img/icon-set.97a09cac.png"},163:function(t,e,r){t.exports=r.p+"assets/img/path.f4ee9ba7.png"},167:function(t,e,r){"use strict";r.r(e);var s=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"nodemcu快速入门-docker编译固件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodemcu快速入门-docker编译固件","aria-hidden":"true"}},[this._v("#")]),this._v(" nodemcu快速入门--docker编译固件")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#安装docker"}},[t._v("安装docker")])]),r("li",[r("a",{attrs:{href:"#编译固件"}},[t._v("编译固件")]),r("ul",[r("li",[r("a",{attrs:{href:"#选择想要编译的模块"}},[t._v("选择想要编译的模块")])]),r("li",[r("a",{attrs:{href:"#修改串口波特率"}},[t._v("修改串口波特率")])]),r("li",[r("a",{attrs:{href:"#关闭对浮点的支持"}},[t._v("关闭对浮点的支持")])])])]),r("li",[r("a",{attrs:{href:"#麻烦的解决"}},[t._v("麻烦的解决")]),r("ul",[r("li",[r("a",{attrs:{href:"#启动镜像并编译固件"}},[t._v("启动镜像并编译固件")])]),r("li",[r("a",{attrs:{href:"#进入容器"}},[t._v("进入容器")])]),r("li",[r("a",{attrs:{href:"#编译失败"}},[t._v("编译失败")])]),r("li",[r("a",{attrs:{href:"#wget失败"}},[t._v("wget失败")])])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装docker")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("选择QuickStart启动toolbox, 它会去下载个虚拟机镜像文件, "),e("strong",[this._v("确保网络可以正常使用")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("下载完后, 接着在窗口中使用"),e("code",[this._v("docker pull marcelstoer/nodemcu-build")]),this._v("获取镜像.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("docker run --rm -it -v //nodemcu-firmware:/opt/nodemcu-firmware marcelstoer/nodemcu-build build")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(163),alt:"配置路径"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"编译固件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译固件","aria-hidden":"true"}},[this._v("#")]),this._v(" 编译固件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("不要忘记获取固件源码, "),e("code",[this._v("git clone https://github.com/nodemcu/nodemcu-firmware.git")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"选择想要编译的模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择想要编译的模块","aria-hidden":"true"}},[this._v("#")]),this._v(" 选择想要编译的模块")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("想云编译类似, 你可以选择自己想要的模块编译入固件. 位于路径"),e("code",[this._v("app\\include\\user_modules.h")]),this._v("的头文件中有一大堆宏定义, 类似于下面的操作可以开启或者关闭模块.")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"language-c extra-class"},[r("pre",{pre:!0,attrs:{class:"language-c"}},[r("code",[r("span",{attrs:{class:"token macro property"}},[t._v("#"),r("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LUA_USE_MODULES_TMR")]),t._v("\n"),r("span",{attrs:{class:"token comment"}},[t._v("//#define LUA_USE_MODULES_TSL2561")]),t._v("\n"),r("span",{attrs:{class:"token macro property"}},[t._v("#"),r("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LUA_USE_MODULES_UART")]),t._v("\n"),r("span",{attrs:{class:"token comment"}},[t._v("//#define LUA_USE_MODULES_U8G2")]),t._v("\n"),r("span",{attrs:{class:"token comment"}},[t._v("//#define LUA_USE_MODULES_UCG")]),t._v("\n"),r("span",{attrs:{class:"token comment"}},[t._v("//#define LUA_USE_MODULES_WEBSOCKET")]),t._v("\n"),r("span",{attrs:{class:"token macro property"}},[t._v("#"),r("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LUA_USE_MODULES_WIFI")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"修改串口波特率"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改串口波特率","aria-hidden":"true"}},[this._v("#")]),this._v(" 修改串口波特率")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("固件模块的串口波特率是115200, 如有需要调整默认波特率修改"),e("code",[this._v("app\\include\\user_config.h")]),this._v("文件中的"),e("code",[this._v("BIT_RATE_DEFAULT")]),this._v("值.\n支持的串口波特率枚举值可以在"),e("code",[this._v("app\\include\\driver\\uart.h")]),this._v("查到.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"关闭对浮点的支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭对浮点的支持","aria-hidden":"true"}},[this._v("#")]),this._v(" 关闭对浮点的支持")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"麻烦的解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#麻烦的解决","aria-hidden":"true"}},[this._v("#")]),this._v(" 麻烦的解决")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"启动镜像并编译固件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动镜像并编译固件","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动镜像并编译固件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("docker-machine start default\ndocker run -it -v //nodemcu-firmware:/opt/nodemcu-firmware\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"进入容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进入容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 进入容器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("一个有趣的命令行, 可以进入容器. "),e("code",[this._v("ls /opt/")]),this._v("可以看到这个镜像支持的命令.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("docker run -it -v //nodemcu-firmware:/opt/nodemcu-firmware marcelstoer/nodemcu-build /bin/bash\n\nroot@8e70bdfc62f5:/opt/nodemcu-firmware"),e("span",{attrs:{class:"token comment"}},[this._v("# ls /opt/")]),this._v("\nbuild  build-esp32  build-esp8266  cmd.sh  configure-esp32  lfs-image  nodemcu-firmware  read.me\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"编译失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译失败","aria-hidden":"true"}},[this._v("#")]),this._v(" 编译失败")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这时候, 你需要在Windows系统下手动解压toolchain到"),e("code",[this._v("nodemcu-firmware\\tools\\toolchains\\esp8266-linux-x86_64-20181106.0")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("最后把Linux系统里的"),e("code",[this._v("esp8266-linux-x86_64-20181106.0\\bin")]),this._v("目录下的内容复制到Windows对应目录中.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"wget失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wget失败","aria-hidden":"true"}},[this._v("#")]),this._v(" wget失败")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("编译的过程中, 会利用wget从GitHub上面获取SDK. 如果下载失败, 可以手动下载并保存到"),e("code",[this._v("nodemcu-firmware\\cache")]),this._v("!")])}],a=r(0),i=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p"),t._m(1),s("p"),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果你不想折腾, 有个云编译可以选择. 具体看我以前写的文章, 入口在"),s("a",{attrs:{href:"https://www.jianshu.com/p/78b1400aa56e",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1)])]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("如果你而已玩腻了nodemcu的云编译固件, 想自己编译或者需要修改某些代码实现更好玩的DIY.\n使用docker来编译固件是一个不错的选择.")]),t._v(" "),s("p",[t._v("要用docker来编译固件, 先要安装docker. 如果你是Windows 10 home版本, 则只能安装docker toolbox.")]),t._v(" "),s("p",[t._v("这里简单的介绍toolbox环境下的docker使用.")]),t._v(" "),s("p",[t._v("到"),s("a",{attrs:{href:"https://docs.docker.com/toolbox/toolbox_install_windows/#how-to-uninstall-toolbox",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("下载安装docker toolbox. 安装完成后, 会出现3个快捷方式. "),s("img",{attrs:{src:r(162),alt:"快捷方式"}})]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("最后使用下面这条命令行来编译固件")]),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("这里有个路径问题需要注意一下, 下载的default虚拟机默认与Windows共享的文件夹是C盘的users文件夹.\n如果你不像把nodemcu的源码放到C盘的话, 需要向虚拟机添加一个路径. 比如向我这样子, 将固件共享到根目录.")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("同样的,在user_config.h文件中, 使用LUA_NUMBER_INTEGRAL宏可以关闭对浮点的支持, 这样可以节省固件大小.\n如果固件有读取温度传感器数据之类的应用则可能需要开启浮点支持")]),t._v(" "),s("p",[t._v("更多编译配置项目, 可以从"),s("a",{attrs:{href:"https://nodemcu.readthedocs.io/en/master/en/build/#build-options",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1),t._v("获取.")]),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("如果你从零开始搭建docker编译环境, 并且一次性成功. 那么, 可以说你足够的幸运. 如果遇到问题, 则下面的方法可能可以帮助到你")]),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("你不需要每次都通过 QuickStart 快捷方式来启动镜像. 尝试下面的命令行")]),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),s("p",[t._v("在执行build的时候, 会下载一个toolchain并解压. 但是可能因为系统权限问题, 解压的文件不完整, 导致编译失败")]),t._v(" "),t._m(22),t._v(" "),s("p",[t._v("接着把toolchain复制到docker的虚拟机中解压.")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25)])},s,!1,null,null,null);i.options.__file="nodemcu快速入门.md";e.default=i.exports}}]);